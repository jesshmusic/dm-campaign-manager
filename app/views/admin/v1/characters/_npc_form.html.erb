
<%= simple_form_for [:v1, @character], validate: true do |form| %>
  <%= form.error_notification %>
  <%= form.error_notification message: form.object.errors[:base].to_sentence if form.object.errors[:base].present? %>
  <% @character.errors.full_messages.each do |msg| %>
                      <h4><%= msg %></h4>
                    <% end %>

  <div class="form-inputs">
    <%= form.association :campaigns,
      collection: current_user.campaigns + current_user.player_campaigns,
      include_blank: false,
      include_hidden: false %>

    <%= form.hidden_field :user_id, value: form.object.user_id || current_user.id %>
    <%= form.hidden_field :type, value: 'NonPlayerCharacter' %>
    <div class="form-row">
      <div class="col">
        <%= form.input :name %>
        <button class="btn btn-sm btn-link" id="randomMaleNameButton">Random Male Name</button>
        <button class="btn btn-sm btn-link" id="randomFemaleNameButton">Random Female Name</button>
      </div>
      <div class="col">
        <%= form.input :role, placeholder: 'Villain, Lord, Blacksmith, etc.' %>
      </div>
    </div>
    <%= render 'character_fields', form: form %>
  </div>

  <div class="form-actions">
    <%= form.button :submit, class: 'btn btn-success mb-3' %>
  </div>
<% end %>

<script>
  $(`#non_player_character_race`).select2({
    theme: "bootstrap"
  });
  $('#non_player_character_alignment').select2({
    theme: "bootstrap"
  });
  $('#non_player_character_dnd_class_ids').select2({
    multiple: false,
    theme: "bootstrap"
  });
  $('#non_player_character_magic_item_ids').select2({
    theme: "bootstrap"
  });
  $('#non_player_character_campaign_ids').select2({
    theme: "bootstrap"
  });
  $('.character_role').show();

  function handleSpellsDisplay() {
    var classValue = $('#non_player_character_dnd_class_ids :selected').text()
    if (classValue === 'Bard' || classValue === 'Cleric' || classValue === 'Druid' || classValue === 'Sorcerer' || classValue === 'Warlock' || classValue === 'Wizard') {
      $('#spellsForm').show();
      showSpellLevels(0, 9);
      loadSelect2();
    } else if (classValue === 'Paladin' || classValue === 'Ranger') {
      $('#spellsForm').show();
      showSpellLevels(1, 5);
      loadSelect2();
    } else {
      $('#spellsForm').hide();
    }
  }

  function showSpellLevels(minLevel, maxLevel) {
    for (var i = 0; i <= 9; i++) {
      $(`#${i}_levelSpells`).hide();
    }
    for (var i = minLevel; i < maxLevel + 1; i++) {
      $(`#${i}_levelSpells`).show();
    }
  }

  $('#non_player_character_dnd_class_ids').on("select2:select", function (event) {
    handleSpellsDisplay();
  });

  $("#equipment_items_container").on('cocoon:after-insert', function(event, addedTask) {
    loadSelect2();
  });

  $("#skills_container").on('cocoon:after-insert', function(event, addedTask) {
    loadSelect2();
  });

  function loadSelect2() {
    $('#character_spell_cantrip_ids').select2({
      theme: "bootstrap"
    });
    $('#character_spell_1st_level_ids').select2({
      theme: "bootstrap"
    });
    $('#character_spell_2nd_level_ids').select2({
      theme: "bootstrap"
    });
    $('#character_spell_3rd_level_ids').select2({
      theme: "bootstrap"
    });
    $('#character_spell_4th_level_ids').select2({
      theme: "bootstrap"
    });
    $('#character_spell_5th_level_ids').select2({
      theme: "bootstrap"
    });
    $('#character_spell_6th_level_ids').select2({
      theme: "bootstrap"
    });
    $('#character_spell_7th_level_ids').select2({
      theme: "bootstrap"
    });
    $('#character_spell_8th_level_ids').select2({
      theme: "bootstrap"
    });
    $('#character_spell_9th_level_ids').select2({
      theme: "bootstrap"
    });
    $( ".equipment_item_item" ).select2({
      multiple: false,
      theme: "bootstrap"
    });
    $( ".skill-selection" ).select2({
      multiple: false,
      theme: "bootstrap"
    });
  }

  $('#randomMaleNameButton').on('click', function(event) {
    event.preventDefault();
    $.ajax({
      type: 'GET',
      url: '/random_fantasy_name',
      data: {
        random_npc_gender: 'male'
      }
    }).done(function(response) {
      $('#non_player_character_name').val(response.name);
    });
  });

  $('#randomFemaleNameButton').on('click', function(event) {
    event.preventDefault();
    $.ajax({
      type: 'GET',
      url: '/random_fantasy_name',
      data: {
        random_npc_gender: 'female'
      }
    }).done(function(response) {
      $('#non_player_character_name').val(response.name);
    });
  });

  handleSpellsDisplay();
  loadSelect2();

</script>
